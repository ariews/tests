; habari coding standard tests
;

;[php opening tags]
;type        = 'file'
;regex       = '/^(^<\?php)*/s'
;description = "A php file should start with the PHP opening tag."
;link        = "http://wiki.habariproject.org/en/Coding_Standards#PHP_Tags"

[php tags]
type        = 'line'
regex       = '/<\?[^php]*$/s'
description = "PHP opening tags should be declared as '<?php'."
link        = "http://wiki.habariproject.org/en/Coding_Standards#PHP_Tags"

[trailing spaces and tabs]
type        = 'line'
regex       = '/[ |\t]+$/s'
description = "There should be no trailing characters at the end of the line."
link        = "http://wiki.habariproject.org/en/Coding_Standards#Indenting"

[identation tabs]
type        = 'line'
regex       = '/^ [^\*]/s'
description = "Use tabs for identation, not spaces."
link        = "http://wiki.habariproject.org/en/Coding_Standards#Indenting"

[identation opening bracket separator]
type        = 'line'
regex       = '/\){/s'
description = "You should use an space betwen a closing parenthesis and an opening bracket."
link        = "http://wiki.habariproject.org/en/Coding_Standards#Indenting"

[identation opening parenthesis]
type        = 'line'
regex       = '/\([^ |\)]+/s'
description = "You should use an space after an opening parenthesis."
link        = "http://wiki.habariproject.org/en/Coding_Standards#Indenting"

[identation closing parenthesis]
type        = 'line'
regex       = '/[^ |\(]+\)/s'
description = "You should use an space before a closing parenthesis."
link        = "http://wiki.habariproject.org/en/Coding_Standards#Indenting"

[identation parenthesis]
type        = 'line'
regex       = '/\(\s+\)+/s'
description = "You should not leave a space when using parenthesis without arguments."
link        = "http://wiki.habariproject.org/en/Coding_Standards#Indenting"

[conditional else statement]
type        = 'line'
regex       = '/}\s*else/'
description = "Else statements should be placed on their own line, not on the same line as the preceding closing curly brace."
link        = "http://wiki.habariproject.org/en/Coding_Standards#if"

[conditional else if statement]
type        = 'line'
regex       = '/\s+else\s+if\s*\(/'
description = "The usage of 'elseif' is encouraged over 'else if'."
link        = "http://wiki.habariproject.org/en/Coding_Standards#if"

[conditional statements parenthesis 1]
type        = 'line'
regex       = '/\s(if|elseif|while|foreach|switch|case|return|for|catch)\(/s'
description = "Conditional statements should have an space separator between the control statement and the opening parenthesis."
link        = "http://wiki.habariproject.org/en/Coding_Standards#Control_Structures"

[conditional statements parenthesis 2]
type        = 'line'
regex       = '/\s(if|elseif|while|foreach|switch|case|return|for|catch)[ ]{2,}\(/s'
description = "Conditional statements should have an space separator between the control statement and the opening parenthesis."
link        = "http://wiki.habariproject.org/en/Coding_Standards#Control_Structures"

[function declaration brackets]
type        = 'line'
regex       = '/\s*function .*\{/s'
description = "Functions (regardless of scope) should be declared with the opening bracket in its own line."
link        = "http://wiki.habariproject.org/en/Coding_Standards#Function_Declarations"

[function naming convention]
type        = 'line'
regex       = '/(?-i)(function\s+|\$)(([a-z]+[A-Z]+([a-z]*[A-Z]*)*)|([A-Z]+[a-z]+([A-Z]*[a-z]*)*))/s'
description = "Functions follow the same rules as variables: should be all-lowercase with words separated by underscores. Do not use camelCaseNames.."
link        = "http://wiki.habariproject.org/en/Dev:Coding_Standards#Functions"

[boolean values]
type        = 'line'
regex       = '/[\s=>]+(true|false|null)[\)\s;,\n\r]+/s'
description = "Boolean values should be referenced by name and in all capital letters."
link        = "http://wiki.habariproject.org/en/Dev:Coding_Standards#Boolean_Values"

